---
- include: "{{ ansible_os_family }}.yml"
  
- name: Install OS Dependencies
  package: name={{ item }} state=present
  with_items:
    - git
    - unzip
    - tar
    - bzip2
    - gettext

# Install uwsgi for the service then overwrite with our own
- name: Install App Dependencies
  package: name={{ item }} state=present
  with_items:
    - nginx
    - logrotate
    - vim
    - libcurl

#install goss 
- name: Install goss
  shell: 'curl -fsSL https://goss.rocks/install | sh'
  args:
    creates: "/usr/local/bin/goss"

- name: Install nginx template
  template: src=templates/eclaim.conf dest=/etc/nginx/conf.d/eclaim.conf
  notify: start nginx

- name: Install uwsgi.ini file
  template: src=templates/uwsgi.ini dest=/etc/uwsgi.ini mode=0644

- include: install_conda.yml

- name: Make sure that uwsgi is installed
  pip: name=uwsgi virtualenv=/opt/miniconda2 version=2.0.13

- name: Install eclaim informix shared path settings
  copy: src=files/eclaim_informix.conf dest=/etc/ld.so.conf.d/eclaim.conf mode=0644

- name: reset ldconfig
  shell: 'ldconfig'

- include: eclaim_revamp.yml
  when: app_version == "eclaim_revamp"

- include: eclaim.yml
  when: app_version == "eclaim"

- name: Install wsgi.ini template
  template: src=templates/uwsgi.ini dest={{ django_app_home }}/uwsgi.ini mode=0644

- name: Copy over uwsgi_params file
  shell: cp /etc/nginx/uwsgi_params {{ django_app_home }}
  args:
    creates: "{{ django_app_home }}-'/uwsgi_params'"

- name: Install eclaim informix shared path settings
  copy: src=files/eclaim_informix.conf dest=/etc/ld.so.conf.d/eclaim.conf mode=0644

- name: reset ldconfig
  shell: 'ldconfig'

- name: Copy over wsgi.py file
  copy: src=files/wsgi.py dest={{ django_app_home }}/wsgi.py force=no
  # args:
  #         creates: /opt/eclaim_revamp/eclaim/wsgi.py

- user: name=postgres comment="postgres user to run psql" state=present

- include: django.yml
  when: app_version == "eclaim_revamp"

- name: Restart nginx and uwsgi
  service: name={{ item }} state=started
  with_items:
    - nginx
    - uwsgi

- name: Add logrotate uwsgi 
  template: src=templates/uwsgi_logrotate dest=/etc/logrotate.d/uwsgi
  notify: start uwsgi

- name: Add root as temporary sudoers
  lineinfile: "dest=/etc/sudoers regexp='^root' line='root ALL=(ALL) NOPASSWD: ALL' state=absent"

- name: Restart uwsgi
  service: name=uwsgi state=restarted

- name: Enable services for automatic start (App Server)
  service: name={{ item }} enabled=yes
  with_items:
    - nginx
    - uwsgi

- name: place goss file
  template: src=templates/gossTemplate.json dest=/goss.json

- include: cron.yml

- name: validate goss
  command: 'goss --gossfile "/goss.json" validate --format documentation'

- include: karma_jasmine.yml
  


